#+TITLE:      Suggestions to keep your Org files tidy
#+AUTHOR:     Worg people
#+OPTIONS:    H:3 num:nil toc:t \n:nil ::t |:t ^:t -:t f:t *:t tex:t d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c)
#+LANGUAGE:   en
#+PRIORITIES: A C B
#+CATEGORY:   worg
#+HTML_LINK_UP:    index.html
#+HTML_LINK_HOME:  https://orgmode.org/worg/

# This file is released by its authors and contributors under the GNU
# Free Documentation license v1.3 or later, code examples are released
# under the GNU General Public License v3 or later.

# This file is the default header for new Org files in Worg.  Feel free
# to tailor it to your needs.

This page collects suggestions and practices to keep your Org files
tidy.

* Archiving: Filing away nodes that are no longer used

Filing away content that is no longer needed is probably the most
effective way to cleanup and tidy your Org files: See [[file:org-hacks.org::#archiving][archiving]].

* Cleaning up metadata

Tags and properties are examples of Org data that is both read by
users and processed by Org itself.  It is possible for Org to find and
remove unused pieces of metadata automatically:

- [[file:org-hacks.org::#remove-empty-property-drawers][Remove empty property drawers]]
- [[file:org-hacks.org::#remove-redundant-tags][Remove redundant tags]]
- [[file:org-hacks.org::#check-for-misplaced-timestamps][Ensure DEADLINE/SCHEDULED timestamps are placed correctly]]
- [[#clean-up-ids][Clean up entry IDs]]
 
** org-id-cleanup: Cleaning up entry IDs
  :PROPERTIES:
  :CUSTOM_ID: clean-up-ids
  :END:
#+index: id!clean
You already know =org-id= which comes with Org: It allows you to add
unique IDs to your nodes, which e.g. are used in links and allow easy
navigation within Org files.

If a user tends to delete those links without deleting the IDs the
links refer to, unused IDs (with no link pointing at them) will be
left over.

In general this is not a problem for =org-id,= and no intervention is
required.  However, if the user produces hundreds or thousands of such
unreferenced IDs, this might eventually start to slow down =org-id=,
especially its function =org-id-update-id-locations=.

In such a situation [[https://github.com/marcIhm/org-id-cleanup][org-id-cleanup]] may come in handy.  It provides an
interactive assistant that guides you through the process of finding
and eventually deleting such unused IDs.

=org-id-cleanup= can be tried whithout hesitation: Before each step it
gives detailed information so that you may bail out at will.  And as a
safety net, a log of removed IDs is saved to disk.

=org-id-cleanup= is available at [[https://melpa.org/#/org-id-cleanup][MELPA]].

* Tidy or repair other elements of org

- [[https://github.com/alphapapa/unpackaged.el#ensure-blank-lines-between-headings-and-before-contents][Ensure blank lines between headings and before contents]]
- [[file:org-hacks.org::#align-tables-in-file][Ensure tables are formatted correctly]]
- [[file:org-tools/index.org::#fix-links][Repair broken links]]

